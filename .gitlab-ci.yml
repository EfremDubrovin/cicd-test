stages:
  - test
  - build
  - trigger

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

# test_job:
#   image: maven:3.8.1-openjdk-17  # Use an image that includes Maven
#   stage: test
#   script:
#     - mvn $MAVEN_CLI_OPTS test

build_job:
  image: maven:3.8.1-openjdk-17  # Use an image that includes Maven
  stage: build
  script:
    - VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    - ARTIFACT_ID=$(mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout)
    - JAR_NAME=$(echo "$ARTIFACT_ID-$VERSION.jar")
    - echo $JAR_NAME
    - mvn $MAVEN_CLI_OPTS clean install
  # dependencies:
  #   - test_job
  artifacts:
    paths:
      - target/*.jar

# trigger_aggregator_pipeline:
#   stage: trigger
#   dependencies:
#     - build_job
#   only:
#     - main
#   script:
#     - curl --request POST --form token=$AGGREGATOR_PIPELINE_TOKEN --form ref=main "https://gitlab.com/api/v4/projects/52100758/trigger/pipeline"

trigger_dependant_projects:
  stage: trigger
  parallel:
    matrix:
    - DOMAIN_DEPENDENCIES:
      - cicd-training2/aggregator
  trigger:
    project: "$DOMAIN_DEPENDENCIES"
