stages:
  - test
  - build
  - trigger

variables:
  MAVEN_CLI_OPTS: "--batch-mode --errors --fail-at-end --show-version"
  MAVEN_OPTS: "-Dmaven.repo.local=.m2/repository"

before_script:
  - export MAVEN_HOME=$(mvn -B --version | grep 'Maven home' | awk '{print $3}')
  - export PATH=$MAVEN_HOME/bin:$PATH

test_job:
  image: maven:3.8.1-openjdk-17  # Use an image that includes Maven
  stage: test
  script:
    - echo ""
    #- mvn $MAVEN_CLI_OPTS test

build_job:
  image: maven:3.8.1-openjdk-17  # Use an image that includes Maven
  stage: build
  script:
    - mvn $MAVEN_CLI_OPTS clean install
    # Extract version from pom.xml
    - export VERSION=$(mvn help:evaluate -Dexpression=project.version -q -DforceStdout)
    # Build Docker image
    - echo $VERSION
    - docker build -t $CI_REGISTRY_IMAGE/${CI_PROJECT_NAME}:${VERSION} .
    # Create a Docker image with the JAR file
    - docker build -t $CI_REGISTRY_IMAGE/${CI_PROJECT_NAME}:${VERSION} \
        --build-arg JAR_FILE=target/*.jar \
        -f Dockerfile_with_jar .
    # Push Docker image to the GitLab Container Registry
    - docker login -u $CI_REGISTRY_USER -p $CI_JOB_TOKEN $CI_REGISTRY
    - docker push $CI_REGISTRY_IMAGE/${CI_PROJECT_NAME}:${VERSION}
  dependencies:
    - test_job
  artifacts:
    paths:
      - target/*.jar

trigger_aggregator_pipeline:
  stage: trigger
  dependencies:
    - build_job
  only:
    - main
  script:
    - curl --request POST --form token=$AGGREGATOR_PIPELINE_TOKEN --form ref=main "https://gitlab.com/api/v4/projects/52100758/trigger/pipeline"
